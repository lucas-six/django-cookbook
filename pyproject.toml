[project]
name = "django-cookbook"
description = "Django Cookbook"
authors = [{ name = "Lucas", email = "lucassix.lee@gmail.com" }]
readme = "README.md"
requires-python = "~=3.11"
license = { file = "LICENSE" }
maintainers = [{ name = "Lucas", email = "lucassix.lee@gmail.com" }]
keywords = ["django"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: Apache Software License",
    "Typing :: Typed",
]
dependencies = [
    "django~=4.2",
    "django-stubs[compatible-mypy]",
    "psycopg[binary, pool] >= 3.2",
    "redis[hiredis]",
    "types-redis",

    "djangorestframework",

    # "flake8-django",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "black",
    "isort",
    "mymy",
    "pylint",
    "pylint-django",
    "colorlog",
    "django-debug-toolbar",
]
doc = []

[project.urls]
Home = "https://lucas-six.github.io/django-cookbook/"
Documentation = "https://lucas-six.github.io/django-cookbook/"
Source = "https://github.com/lucas-six/django-cookbook/"

[tool.black]
line-length = 100
target-version = ['py311']
skip-string-normalization = true
include = '\.pyi?$'
extend-exclude = '''
migrations/.*\.py$
tests/.*\.py$
'''

[tool.isort]
src_paths = ["django_cookbook"]
atomic = true
profile = "black"
# skip = [
#    '.bzr',
#    '.direnv',
#    '.eggs',
#    '.git',
#    '.hg',
#    '.mypy_cache',
#    '.nox',
#    '.pants.d',
#    '.svn',
#    '.tox',
#    '.venv',
#    '__pypackages__',
#    '_build',
#    'buck-out',
#    'build',
#    'dist',
#    'node_modules',
#    'venv'
# ]
skip_gitignore = true
extend_skip = [".gitignore", ".env", ".dockerignore", "manage.py"]
# skip_glob = []
extend_skip_glob = ["*/migrations/*"]

[tool.mypy]
python_version = "3.11"
exclude = ["manage.py", "models.py", "migrations/"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
disallow_any_generics = false
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "redis.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "debug_toolbar.*"
ignore_missing_imports = true

[tool.pylint.main]
recursive = true
py-version = 3.11
jobs = 0
ignore = "CVS,.git,__pycache__,.mypy_cache,manage.py,tests"
ignore-paths = "tests"
ignore-patterns = "test_.*.py"
load-plugins = [
    "pylint.extensions.bad_builtin",
    "pylint_django",
    "pylint_django.checkers.migrations",
]

[tool.pylint.'FORMAT']
max-line-length = 100

[tool.pylint.'LOGGING']
logging-format-style = "new"

[tool.pylint.'MESSAGES CONTROL']
disable = ["logging-fstring-interpolation"]
enable = [
    "missing-class-docstring",
    "missing-function-docstring",
    "c-extension-no-member",
    "useless-suppression",
    "logging-format-interpolation",
    "duplicate-code",
    "deprecated-pragma",
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "use-symbolic-message-instead",
]

[tool.pylint.design]
max-args = 15
min-public-methods = 0
max-locals = 25

[tool.pylint.deprecated_builtins]
bad-functions = ["map", "filter", "print"]

#[tool.flake8]
#extend-exclude = "**/migrations/*.py"
#per-file-ignores = "settings.py:E501"
#require-plugins = "flake8-django"

[tool.pyright]
include = ["django_cookbook"]
exclude = [".git", "**/__pycache__", "**/.mypy_cache", "**/migrations"]
reportGeneralTypeIssues = "none"
#reportUnboundVariable = "none"
stubPath = ""
pythonVersion = "3.11"
